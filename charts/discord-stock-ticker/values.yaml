#
# IMPORTANT NOTE
#
# This chart inherits from k8s@home's common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  # -- image repository
  repository: ghcr.io/jr0dd/discord-stock-ticker
  # -- image tag
  tag: v3.6.1
  # -- image pull policy
  pullPolicy: IfNotPresent

lifecycle:
  # -- Set the container lifecycle event
  # @default -- See values.yaml
  postStart:
    exec:
      command: ["bash", "/app/payload.sh"]

# @default -- See below
## For additional env vars, if not using the configmap script below,
## Please see docs https://github.com/rssnyder/discord-stock-ticker
env:
  # -- Set the container timezone
  TZ: UTC

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8080

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: false
    mountPath: /config

# -- Configures the probes for the main Pod.
# @default -- See values.yaml
probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command: ["bash", "-c", "if [[ $(curl -s https://discord.com) ]]; then exit 0; else exit $?; fi"]
      initialDelaySeconds: 0
      timeoutSeconds: 1
      periodSeconds: 5
      failureThreshold: 5

metrics:
  # -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
  # @default -- See values.yaml
  enabled: false
  serviceMonitor:
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
  # -- Enable and configure Prometheus Rules for the chart under this key.
  # @default -- See values.yaml
  prometheusRule:
    enabled: false
    labels: {}
    # -- Configure additionial rules for the chart under this key.
    # @default -- See prometheusrules.yaml
    rules: []
      # - alert: DiscordStockTickerAbsent
      #   annotations:
      #     description: Discord Stock Ticker has disappeared from Prometheus
      #       service discovery.
      #     summary: Discord Stock Ticker is down.
      #   expr: |
      #     absent(up{job="discord-stock-ticker"} == 1)
      #   for: 5m
      #   labels:
      #     severity: critical

# -- Store payload script as a configmap
# -- Otherwise you can use env vars or curl to deliver the payload
## Please see docs https://github.com/rssnyder/discord-stock-ticker
# @default -- See values.yaml
configmap:
  # -- If set to 'true', the configuration will be read from these values.
  enabled: false
  # @default -- See values.yaml
  config: |
    #!/usr/bin/env bash
    set -eu

    FREQ="10"
    NICK="true"
    COLOR="true"
    ACTIVITY=""

    curl -X POST \
    "localhost:8080/ticker" \
    -H "Content-Type: application/json" \
    -d "{\"ticker\":\"BTC\", \
      \"name\":\"bitcoin\", \
      \"discord_bot_token\":\"${BTC}\", \
      \"crypto\":true, \
      \"frequency\":${FREQ}, \
      \"set_nickname\":${NICK}, \
      \"set_color\":${COLOR}, \
      \"bitcoin\":false, \
      \"activity\":\"${ACTIVITY}\"}"

    curl -X POST \
    "localhost:8080/ticker" \
    -H "Content-Type: application/json" \
    -d "{\"ticker\":\"GME\", \
      \"name\":\"GME\", \
      \"discord_bot_token\":\"${GME}\", \
      \"frequency\":${FREQ}, \
      \"set_nickname\":${NICK}, \
      \"set_color\":${COLOR}, \
      \"activity\":\"${ACTIVITY}\"}"
